services:
  # 1. Contenedor de la Base de Datos
  db:
    image: mariadb:10.11 # Funciona con esta versión
    container_name: mariadb_service
    restart: always
    volumes:
      - ./mariadb_data:/var/lib/mysql
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5307:3306" # Exponer el puerto solo si necesitas acceder desde tu máquina local

  # 2. Contenedor de Redis
  redis:
    image: redis:alpine
    container_name: redis_service
    restart: always
    ports:
      - "6379:6379"

  # 3. Contenedor de la Aplicación Web (Django)
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: django_web_app
    restart: always
    volumes:
      - ./web:/app  # Mapea tu código local para desarrollo en tiempo real
    command: ["./wait-for-db.sh", "sh", "-c", "python manage.py makemigrations accounts && python manage.py makemigrations finances && python manage.py makemigrations subscriptions && python manage.py makemigrations forecasts && python manage.py migrate && python manage.py populate_finances && python create_superuser.py && python manage.py create_subscription_expenses && exec python manage.py runserver 0.0.0.0:8000"]
   
    ports:
      - "5800:8000"
    env_file:
      - ./.env
    environment:
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      DJANGO_SUPERUSER_PASSWORD: admin123
    depends_on:
      - db # No intentes iniciar la web hasta que la base de datos esté lista
      - redis # No intentes iniciar la web hasta que Redis esté listo
